name: Python Test and Package

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

jobs:

  linting:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
        cache: 'pip'
    - name: Linting with pre-commit
      run: |
        python -m pip install pre-commit
        pre-commit run --all-files

  test:
    needs: linting
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8,3.9,'3.10', 3.11]

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -e .[vtk,dask] -r test/requirements.txt

    - name: Test with pytest
      run: |
        python -m pytest


  publish:
    needs: test
    name: Upload release to PyPI
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
      contents: write
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    - name: Build package
      run: |
        python -m pip install twine build
        python -m build --wheel --sdist
        python -m twine check dist/*
        ls -la dist
    - name: Upload package
      if: github.event_name == 'push'
      uses: actions/upload-artifact@v3
      with:
        name: python-packages
        path: dist
    - name: Create Release and Upload
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release create ${{ github.ref_name }} --repo ${{ github.repository }} --verify-tag --generate-notes --title "Release ${{ github.ref_name }}"
        gh release upload ${{ github.ref_name }} --repo ${{ github.repository }} dist/*


    - name: PyPI Publish package
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
      # hash for release/v1.8
      uses: pypa/gh-action-pypi-publish@0bf742be3ebe032c25dd15117957dc15d0cfc38d
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
